import React, { Component } from 'react'
import HubletoTable, { HubletoTableProps, HubletoTableState } from '@hubleto/src/core/Components/HubletoTable';
import Form{{ modelSingularForm }} from './Form{{ modelSingularForm }}';

interface Form{{ modelPluralForm }}Props extends HubletoTableProps {
  // idCustomer?: number,
}

interface Table{{ modelPluralForm }}State extends HubletoTableState {
  // idCustomer: number,
}

export default class Form{{ modelPluralForm }} extends HubletoTable<Form{{ modelPluralForm }}Props, Form{{ modelPluralForm }}State> {
  static defaultProps = {
    ...HubletoTable.defaultProps,
    formUseModalSimple: true,
    model: '{{ appNamespaceForwardSlash }}/Models/{{ model }}',
  }

  props: Form{{ modelPluralForm }}Props;
  state: Form{{ modelPluralForm }}State;

  translationContext: string = '{{ appNamespaceDoubleBackslash }}::Components\\Form{{ modelPluralForm }}';

  constructor(props: Form{{ modelPluralForm }}Props) {
    super(props);
    this.state = this.getStateFromProps(props);
  }

  getStateFromProps(props: Form{{ modelPluralForm }}Props) {
    return {
      ...super.getStateFromProps(props),
    }
  }

  getFormModalProps(): any {
    let params = super.getFormModalProps();
    params.type = 'right wide';
    return params;
  }

  getEndpointParams(): any {
    return {
      ...super.getEndpointParams(),
      idCustomer: this.props.idCustomer,
    }
  }

  renderForm(): JSX.Element {
    let formProps = this.getFormProps();
    // formProps.customEndpointParams.idCustomer = this.props.idCustomer;
    // if (!formProps.description) formProps.description = {};
    // formProps.description.defaultValues = { idDashboard: this.state.recordId };
    return <Form{{ modelSingularForm }} {...formProps}/>;
  }
}