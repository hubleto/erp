<script>
  function onFilterChange() {
    const fDealResult = document.getElementById("fDealResult").value;
    const fResponsible = globalThis.app.reactElements['fResponsible'].state.value;

    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const idPipeline = urlParams.get('id_pipeline');

    let url = '?';
    if (idPipeline) url += 'id_pipeline=' + idPipeline;
    if (fDealResult) url += '&fDealResult=' + fDealResult;
    if (fResponsible) url += '&fResponsible=' + fResponsible;

    window.location.href = url;
  }
</script>

{% set resultEnumValues = {
  1: {"color":"#c42202","title":"Lost"},
  2: {"color":"#14ab0c","title":"Won"},
  3: {"color":"#a8aba7","title":"Pending"},
} %}

<div class="flex gap-2 flex-col md:flex-row" style="height:calc(100vh - var(--nav-height) - 1rem)">
  <div class="flex flex-row md:flex-col gap-2 border-r border-gray-200 pr-2" style="width:10rem">
    {# <form action="" method="get" style="min-width: 30%">
      <select class="border p-2 mb-2 ounded-md border-gray-200 text-2xl font-bold text-green-700 w-full" name="id_pipeline" onchange="submit()">
        {% for pipeline in viewParams.pipelines %}
          <option value="{{ pipeline.id }}"
          {% if pipeline.id == viewParams.pipeline.id %} selected {% endif %}
          >{{ pipeline.name }}</option>
        {% endfor %}
      </select>
    </form> #}

    {% for pipeline in viewParams.pipelines %}
      <a href="?id_pipeline={{ pipeline.id }}"
        class="btn {% if pipeline.id == viewParams.pipeline.id %} btn-primary {% else %} btn-transparent {% endif %}"
      >
        <span class="icon"><i class="fas fa-timeline"></i></span>
        <span class="text">{{ pipeline.name }}</span>
      </a>
    {% endfor %}
    <a class="btn btn-add" href="settings/pipelines?recordId=-1" target="_blank">
      <span class="icon"><i class="fas fa-add"></i></span>
      <span class="text">{{ translate('Add pipeline') }}</span>
    </a>
  </div>

  <div class="flex flex-col flex-grow overflow-auto">

    <h1 class="app-main-title">{{ viewParams.pipeline.name }}</h1>

    <div class="alert alert-primary mt-2">
      Potential Pipeline Profit: {{ viewParams.main.locale.formatCurrency(viewParams.pipeline.price) }}
    </div>

    <div class="card card-horizontal">
      <div class="card-header">
        <i class="fas fa-magnifying-glass"></i>
      </div>
      <div class="card-body flex gap-2">
        <div class="input-wrapper flex-1">
          <div class="input-label">Result</div>
          <div class="input-body">
            <select class="w-full" name="fDealResult" id="fDealResult" onchange="onFilterChange();">
              <option value="0"></option>
              <option {% if viewParams.fDealResult == 3 %} selected {% endif %} value="3">Pending</option>
              <option {% if viewParams.fDealResult == 1 %} selected {% endif %} value="1">Lost</option>
              <option {% if viewParams.fDealResult == 2 %} selected {% endif %} value="2">Won</option>
            </select>
          </div>
        </div>
        <div class="input-wrapper flex-1">
          <div class="input-label">Responsible</div>
          <div class="input-body">
            <app-input-lookup
              uid="fResponsible"
              model="HubletoApp/Community/Settings/Models/User"
              class="w-full"
              value="{{ viewParams.fResponsible }}"
              function:on-change="onFilterChange();"
            />
          </div>
        </div>
      </div>
    </div>

    <div class="flex flex-col items-stretch md:flex-row justify-start gap-2 overflow-auto">
      {% for step in viewParams.pipeline.PIPELINE_STEPS %}

        {# Step Containter #}
        <div class="card w-full md:w-[280px]">

          <div class="card-header flex flex-col gap-1">
            <span style="border-left: 1em solid {{ step.color }};padding-left:1em;">{{ step.name }}</span>

            <div class="flex flex-row gap-2 align-items-center text-gray-400">
              <span style="font-size: 9pt;" class="font-normal pt-1">Potential Profit: {{ viewParams.main.locale.formatCurrency(step.sum_price) }}</span>
            </div>
          </div>

          <div class="card-body overflow-auto flex flex-row flex-wrap md:block">
            {# Deal Card #}
            {% for deal in viewParams.deals %}
              {% if deal.id_pipeline_step == step.id %}
                <div class="card w-full md:w-auto hover:border-primary"><a class="hover:no-underline" href="./deals?recordId={{deal.id}}" target="_blank">
                  <div class="card-header rounded flex flex-col p-2 text-sm font-normal">
                    <div class="flex justify-between">
                      <div class="flex flex-col truncate">
                        <div>{{deal.identifier}}</div>
                        <div class="font-bold">{{deal.CUSTOMER.name}}</div>
                        <div class="text-gray-400">{{deal.title}}</div>
                      </div>
                      <div class="mt-1">
                        <div class="mb-3 pr-2 text-right font-normal" style="border-right: 0.5em solid {{ resultEnumValues[deal.deal_result]["color"] }}">{{ resultEnumValues[deal.deal_result]["title"] }}</div>
                        <div class="badge bg-white font-normal" style="border: 1px solid {{deal.TAG.color}}; color: {{deal.TAG.color}};">{{deal.TAG.name}}</div>
                      </div>
                    </div>
                  </div>
                  <div class="card-body text-sm">
                    <div>Value: {{deal.price}} {{deal.CURRENCY.code}}</div>
                    <div>Closes on: {{ deal.date_expected_close ? deal.date_expected_close|date("d.m.Y") : "N/A" }}</div>
                    <div>Responsible: {{ deal.USER.email }}</div>
                  </div>
                </a></div>
              {% endif %}
            {% endfor %}
          </div>

          <div class="card-footer">
            <a
              class="btn btn-transparent"
              href="deals?recordId=-1&id_pipeline={{ viewParams.pipeline.id }}&id_pipeline_step={{ step.id }}"
              target="_blank"
            >
              <span class="icon"><i class="fas fa-add"></i></span>
              <span class="text">Add deal</span>
            </a>
          </div>
        </div>
      {% endfor %}

      {# Step Containter #}
      <div class="card">
        <div class="card-body flex flex-row flex-wrap md:block">
          <a class="btn btn-transparent" href="settings/pipelines?recordId={{viewParams.pipeline.id}}" target="_blank">
            <span class="icon"><i class="fas fa-add"></i></span>
            <span class="text">{{ translate('Manage pipeline steps') }}</span>
          </a>
        </div>
      </div>
    </div>
  </div>
</div>