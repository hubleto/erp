<?php

if (php_sapi_name() !== 'cli') exit;

// if (is_file(__DIR__ . "/vendor/autoload.php")) require_once(__DIR__ . "/vendor/autoload.php");
// else if (is_file(__DIR__ . "/../vendor/autoload.php")) require_once(__DIR__ . "/../vendor/autoload.php");

// require_once("src/Main.php");

// if (is_file(__DIR__ . '/ConfigEnv.php')) require_once(__DIR__ . '/ConfigEnv.php');

// cli agent is used also in 'Installer/template/hubleto'
if (!isset($config) || !is_array($config)) $config = [];

$config['sessionSalt'] = 'hubleto-cli-agent';

$main = new \HubletoMain\Loader($config);
$main->init();

// MAIN code

\Hubleto\Terminal::green("Hubleto CLI agent.\n");

$action = (string) ($argv[1] ?? '');

if (!empty($action)) {
  try {
    $command = null;
    switch ($action) {
      case 'help': $command = new \HubletoMain\Cli\Agent\CommandHelp($main, $argv); break;
      case 'init': $command = new \HubletoMain\Cli\Agent\CommandInit($main, $argv); break;
      case 'release':
        switch ($argv[2]) {
          case 'create': $command = new \HubletoMain\Cli\Agent\Release\Create($main, $argv); break;
        }
      break;
      case 'app':
        switch ($argv[2]) {
          case 'list': $command = new \HubletoMain\Cli\Agent\App\ListInstalled($main, $argv); break;
          case 'install': $command = new \HubletoMain\Cli\Agent\App\Install($main, $argv); break;
          case 'disable': $command = new \HubletoMain\Cli\Agent\App\Disable($main, $argv); break;
          case 'test': $command = new \HubletoMain\Cli\Agent\App\Test($main, $argv); break;
          case 'reset-all': $command = new \HubletoMain\Cli\Agent\App\ResetAll($main, $argv); break;
          case 'create': $command = new \HubletoMain\Cli\Agent\App\Create($main, $argv); break;
          case 'add-repository': $command = new \HubletoMain\Cli\Agent\App\AddRepository($main, $argv); break;
        }
      break;
      case 'debug':
        switch ($argv[2]) {
          case 'test-oauth': $command = new \HubletoMain\Cli\Agent\Debug\TestOauth($main, $argv); break;
          case 'router': $command = new \HubletoMain\Cli\Agent\Debug\Router($main, $argv); break;
        }
      break;
      case 'create':
        switch ($argv[2]) {
          case 'app': $command = new \HubletoMain\Cli\Agent\App\Create($main, $argv); break;
          case 'model': $command = new \HubletoMain\Cli\Agent\Create\Model($main, $argv); break;
          case 'controller': $command = new \HubletoMain\Cli\Agent\Create\Controller($main, $argv); break;
          case 'view': $command = new \HubletoMain\Cli\Agent\Create\View($main, $argv); break;
          case 'mvc': $command = new \HubletoMain\Cli\Agent\Create\TableFormViewAndController($main, $argv); break;
          case 'api': $command = new \HubletoMain\Cli\Agent\Create\ApiEndpoint($main, $argv); break;
        }
      break;
      case 'project':
        switch ($argv[2]) {
          case 'init': $command = new \HubletoMain\Cli\Agent\CommandInit($main, $argv); break;
          case 'generate-demo-data': $command = new \HubletoMain\Cli\Agent\Project\GenerateDemoData($main, $argv); break;
        }
      break;
    }

    if ($command === null) {
      \Hubleto\Terminal::red("Don't know what to do.\n");
    } else {
      $command->run();
    }
  } catch (\Throwable $e) {
    \Hubleto\Terminal::red("{$e->getMessage()}\n");
    \Hubleto\Terminal::red($e->getTraceAsString()."\n");
  }
} else {
  \Hubleto\Terminal::green("Usage: php hubleto <command>\n");
  \Hubleto\Terminal::green("Example: php hubleto help\n");
}
