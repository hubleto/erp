import React, { Component } from 'react'
import HubletoForm, { HubletoFormProps, HubletoFormState } from '@hubleto/react-ui/ext/HubletoForm';
import Table, { TableProps, TableState } from '@hubleto/react-ui/core/Table';

interface Form{{ modelSingularForm }}Props extends HubletoFormProps { }
interface Form{{ modelSingularForm }}State extends HubletoFormState { }

export default class Form{{ modelSingularForm }}<P, S> extends HubletoForm<Form{{ modelSingularForm }}Props, Form{{ modelSingularForm }}State> {
  static defaultProps: any = {
    ...HubletoForm.defaultProps,
    model: '{{ appNamespaceForwardSlash }}/Models/{{ modelSingularForm }}'
  }

  props: Form{{ modelSingularForm }}Props;
  state: Form{{ modelSingularForm }}State;

  translationContext: string = '{{ appNamespaceDoubleBackslash }}';
  translationContextInner: string = 'Components\\Form{{ modelSingularForm }}';

  constructor(props: Form{{ modelSingularForm }}Props) {
    super(props);
  }

  getStateFromProps(props: FormDealProps) {
    return {
      ...super.getStateFromProps(props),
      tabs: [
        { uid: 'default', title: <b>this.translate('{{ modelSingularForm }}')</b> },
        // Add your tabs here.
        // 'tab_with_nested_table': { title: 'Example tab with nested table' }
      ]
    };
  }

  getRecordFormUrl(): string {
    return '{{ modelPluralFormKebab }}/' + (this.state.record.id > 0 ? this.state.record.id : 'add');
  }

  renderTitle(): JSX.Element {
    return <>
      <small>{{ model }}</small>
      <h2>Record #{this.state.record.id ?? '0'}</h2>
    </>;
  }

}
